- name: install neovim
  block:

  - name: install required packages
    become: yes
    package:
      state: present
      name: 
        - luajit
        - ripgrep
        - fd-find

  - name: Download Neovim
    get_url:
      url: https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
      dest: "{{ ansible_env.HOME }}/Downloads/nvim.appimage"

  - name: Make nvim download a executable
    become: true
    shell: cd {{ ansible_env.HOME}}/Downloads && chmod u+x nvim.appimage

  - name: Extract Neomvim
    become: true
    shell: cd {{ ansible_env.HOME}}/Downloads && ./nvim.appimage --appimage-extract

  - name: Remove Neovim directory if exists
    ansible.builtin.file:
      path: /squashfs-root
      state: absent
    become: yes

  - name: Move Neovim directory
    become: true
    command: mv "{{ ansible_env.HOME }}/Downloads/squashfs-root" /

  - name: Create symlink for nvim if it does not exist
    become: true
    command: ln -s /squashfs-root/AppRun /usr/bin/nvim
    args:
      creates: /usr/bin/nvim

  - name: Ensure ~/.config/nvim directory exists
    file:
      path: "~/.config/nvim"
      state: absent

  - name: Recreate ~/.config/nvim directory
    file:
      path: "~/.config/nvim"
      state: directory

  - name: Recursively link nvim configs
    find:
      paths: "{{ role_path }}/files/nvim"
      file_type: any
    register: nvim_files

  - name: Create symbolic links for nvim configs
    file:
      src: "{{ item.path }}"
      dest: "~/.config/nvim/{{ item.path | regex_replace(role_path + '/files/nvim/', '') }}"
      state: link
    loop: "{{ nvim_files.files }}"

  - name: Create phpactor dir
    file:
      path: "{{ phpactor_config_dir }}"
      state: directory

  - name: Link ftplugin files
    file:
      src: "{{ ansible_env.HOME }}/.dotfiles/roles/neovim/files/plugin_config/phpactor.json"
      dest: "{{ phpactor_config_dir }}/phpactor.json"
      state: link

- name: install neovim dependencies
  block:

  - name: Clone vscode-php-debug repository
    ansible.builtin.git:
      repo: https://github.com/xdebug/vscode-php-debug.git
      dest: ~/vscode-php-debug

  - name: Install dependencies
    shell: cd {{ ansible_env.HOME}}/vscode-php-debug && npm install 2>&1 || true

  - name: Build dependencies
    shell: cd {{ ansible_env.HOME}}/vscode-php-debug && npm run build

  - name: Install Vue Language Server globally
    become: yes
    command: npm install -g @vue/language-server

  - name: Install Typescript globally
    become: yes
    command: npm install -g typescript
