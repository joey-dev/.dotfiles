- name: install php
  block:
  - name: Add PPA for PHP (Ubuntu only)
    become: true
    apt_repository:
      repo: ppa:ondrej/php
      state: present
    register: php_ppa
    when: ansible_distribution == "Ubuntu"

  - name: Ensure GPG tools and python3-debian are available (Debian only)
    become: true
    apt:
      name: 
        - gnupg
        - python3-debian
      state: present
      update_cache: false
    when: ansible_distribution == "Debian"

  - name: Download and dearmor Sury PHP repository GPG key (Debian only)
    become: true
    shell: |
      curl -fsSL "https://packages.sury.org/php/apt.gpg" | gpg --dearmor -o /usr/share/keyrings/sury-php-keyring.gpg
      chmod 644 /usr/share/keyrings/sury-php-keyring.gpg
    register: php_key
    when: ansible_distribution == "Debian"

  - name: Add Sury PHP repository source (Debian only)
    become: true
    deb822_repository:
      name: sury-php
      types: [deb]
      uris: https://packages.sury.org/php/
      suites: ["{{ ansible_distribution_release }}"]
      components: [main]
      signed_by: /usr/share/keyrings/sury-php-keyring.gpg
      state: present
    vars:
      ansible_python_interpreter: /usr/bin/python3
    when: ansible_distribution == "Debian" and php_key is succeeded
    register: php_repo

  - name: Update apt package cache
    become: true
    apt:
      update_cache: yes
    when: (ansible_distribution == "Ubuntu" and php_ppa is succeeded) or (ansible_distribution == "Debian" and php_key is succeeded and php_repo is succeeded)

  - name: Install PHP and related packages
    become: true
    apt:
      name: "{{ item }}"
      state: present
    loop:
      - php{{ php_version }}
      - php{{ php_version }}-cli
      - php{{ php_version }}-common
      - php{{ php_version }}-mysql
      - php{{ php_version }}-xml
      - php{{ php_version }}-curl
      - php{{ php_version }}-mbstring
      - php{{ php_version }}-intl
      - php{{ php_version }}-gd
      - php{{ php_version }}-pdo
      - php{{ php_version }}-simplexml
      - php{{ php_version }}-zip
    when: (ansible_distribution == "Ubuntu" and php_ppa is succeeded) or (ansible_distribution == "Debian" and php_key is succeeded and php_repo is succeeded)

  - name: Download Composer installer
    command: php -r "copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');"
    register: composer_download
    when: (ansible_distribution == "Ubuntu" and php_ppa is succeeded) or (ansible_distribution == "Debian" and php_key is succeeded and php_repo is succeeded)

  - name: Run Composer installer
    command: php /tmp/composer-setup.php
    when: ((ansible_distribution == "Ubuntu" and php_ppa is succeeded) or (ansible_distribution == "Debian" and php_key is succeeded and php_repo is succeeded)) and composer_download is succeeded

  - name: Remove Composer installer
    command: php -r "unlink('/tmp/composer-setup.php');"
    when: ((ansible_distribution == "Ubuntu" and php_ppa is succeeded) or (ansible_distribution == "Debian" and php_key is succeeded and php_repo is succeeded)) and composer_download is succeeded

  - name: Make composer global
    command: mv {{ playbook_dir }}/composer.phar /usr/local/bin/composer
    become: true
    when: ((ansible_distribution == "Ubuntu" and php_ppa is succeeded) or (ansible_distribution == "Debian" and php_key is succeeded and php_repo is succeeded)) and composer_download is succeeded

  - name: Install phpMD
    command: composer global require phpmd/phpmd
    when: ((ansible_distribution == "Ubuntu" and php_ppa is succeeded) or (ansible_distribution == "Debian" and php_key is succeeded and php_repo is succeeded)) and composer_download is succeeded

  - name: Install phpStan
    command: composer global require phpstan/phpstan
    when: ((ansible_distribution == "Ubuntu" and php_ppa is succeeded) or (ansible_distribution == "Debian" and php_key is succeeded and php_repo is succeeded)) and composer_download is succeeded

  - name: Install phpStan strict rules
    command: composer global require phpstan/phpstan-strict-rules
    when: ((ansible_distribution == "Ubuntu" and php_ppa is succeeded) or (ansible_distribution == "Debian" and php_key is succeeded and php_repo is succeeded)) and composer_download is succeeded

  - name: Install phpStan phpunit
    command: composer global require phpstan/phpstan-phpunit
    when: ((ansible_distribution == "Ubuntu" and php_ppa is succeeded) or (ansible_distribution == "Debian" and php_key is succeeded and php_repo is succeeded)) and composer_download is succeeded

  - name: Install phpStan shipmonk phpstan-rules
    command: composer global require shipmonk/phpstan-rules
    when: ((ansible_distribution == "Ubuntu" and php_ppa is succeeded) or (ansible_distribution == "Debian" and php_key is succeeded and php_repo is succeeded)) and composer_download is succeeded

  - name: Install phpStan jangregor phpstan-prophecy
    command: composer global require jangregor/phpstan-prophecy
    when: ((ansible_distribution == "Ubuntu" and php_ppa is succeeded) or (ansible_distribution == "Debian" and php_key is succeeded and php_repo is succeeded)) and composer_download is succeeded

